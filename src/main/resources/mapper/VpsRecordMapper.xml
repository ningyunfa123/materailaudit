<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.audit.materialaudit.mapper.VpsRecordMapper" >
  <resultMap id="BaseResultMap" type="com.audit.materialaudit.model.VpsRecord" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="use_time" property="useTime" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="vps_id" property="vpsId" jdbcType="INTEGER" />
    <result column="use_amount" property="useAmount" jdbcType="INTEGER" />
    <result column="cert_code" property="certCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, port, ip, password, user_name, status, use_time, type, delete_flag, create_time, 
    update_time, vps_id, use_amount, cert_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.audit.materialaudit.model.VpsRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vps_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.audit.materialaudit.model.VpsRecordExample" >
    delete from vps_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.audit.materialaudit.model.VpsRecord" >
    insert into vps_record (id, port, ip, 
      password, user_name, status, 
      use_time, type, delete_flag, 
      create_time, update_time, vps_id, 
      use_amount, cert_code)
    values (#{id,jdbcType=INTEGER}, #{port,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{useTime,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{deleteFlag,jdbcType=TINYINT}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{vpsId,jdbcType=INTEGER}, 
      #{useAmount,jdbcType=INTEGER}, #{certCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.audit.materialaudit.model.VpsRecord" >
    insert into vps_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="useTime != null" >
        use_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="vpsId != null" >
        vps_id,
      </if>
      <if test="useAmount != null" >
        use_amount,
      </if>
      <if test="certCode != null" >
        cert_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="vpsId != null" >
        #{vpsId,jdbcType=INTEGER},
      </if>
      <if test="useAmount != null" >
        #{useAmount,jdbcType=INTEGER},
      </if>
      <if test="certCode != null" >
        #{certCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.audit.materialaudit.model.VpsRecordExample" resultType="java.lang.Integer" >
    select count(*) from vps_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vps_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.port != null" >
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.useTime != null" >
        use_time = #{record.useTime,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.vpsId != null" >
        vps_id = #{record.vpsId,jdbcType=INTEGER},
      </if>
      <if test="record.useAmount != null" >
        use_amount = #{record.useAmount,jdbcType=INTEGER},
      </if>
      <if test="record.certCode != null" >
        cert_code = #{record.certCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vps_record
    set id = #{record.id,jdbcType=INTEGER},
      port = #{record.port,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      use_time = #{record.useTime,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      vps_id = #{record.vpsId,jdbcType=INTEGER},
      use_amount = #{record.useAmount,jdbcType=INTEGER},
      cert_code = #{record.certCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>