<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.audit.materialaudit.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.audit.materialaudit.model.User" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="newpassword" property="newpassword" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="trueName" property="truename" jdbcType="VARCHAR" />
    <result column="deptName" property="deptname" jdbcType="VARCHAR" />
    <result column="createId" property="createid" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="repwdTime" property="repwdtime" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="activeCode" property="activecode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userName, password, newpassword, roleName, trueName, deptName, createId, createTime, 
    repwdTime, phone, activeCode, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.audit.materialaudit.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from equ_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.audit.materialaudit.model.UserExample" >
    delete from equ_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.audit.materialaudit.model.User" >
    insert into equ_user (id, userName, password, 
      newpassword, roleName, trueName, 
      deptName, createId, createTime, 
      repwdTime, phone, activeCode, 
      status)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{newpassword,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR}, 
      #{deptname,jdbcType=VARCHAR}, #{createid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{repwdtime,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR}, #{activecode,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.audit.materialaudit.model.User" >
    insert into equ_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="newpassword != null" >
        newpassword,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="truename != null" >
        trueName,
      </if>
      <if test="deptname != null" >
        deptName,
      </if>
      <if test="createid != null" >
        createId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="repwdtime != null" >
        repwdTime,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="activecode != null" >
        activeCode,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="newpassword != null" >
        #{newpassword,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="deptname != null" >
        #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="repwdtime != null" >
        #{repwdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="activecode != null" >
        #{activecode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.audit.materialaudit.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from equ_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update equ_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.newpassword != null" >
        newpassword = #{record.newpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.truename != null" >
        trueName = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null" >
        deptName = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.createid != null" >
        createId = #{record.createid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repwdtime != null" >
        repwdTime = #{record.repwdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.activecode != null" >
        activeCode = #{record.activecode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update equ_user
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      newpassword = #{record.newpassword,jdbcType=VARCHAR},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      trueName = #{record.truename,jdbcType=VARCHAR},
      deptName = #{record.deptname,jdbcType=VARCHAR},
      createId = #{record.createid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      repwdTime = #{record.repwdtime,jdbcType=TIMESTAMP},
      phone = #{record.phone,jdbcType=VARCHAR},
      activeCode = #{record.activecode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>